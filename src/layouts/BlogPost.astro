---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, subtitle, description, tags, pubDate, updatedDate } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			@media (max-width: 720px) {
				main {
					width: 100%;
					max-width: 100%;
				}
				main .slot-container {
					background: var(--white);
					box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.06);
					padding: 1em 2em 3em 2em;
				}
			}
			.prose {
				width: 1080px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
			}
			.title {
				margin-bottom: 3em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title p {
				margin: 0 0 0.4em 0;
				font-size: 2em;
			}
			.subtitle p {
				color: var(--accent);
				font-size: 0.9em;
			}
			.date {
				color: var(--accent);
				font-size: 0.9em;
			}
			.last-updated-on {
				margin-top: 0.2em;
				font-size: 0.9em;
				font-style: italic;
			}
			.empty-updated-date {
				height: 1.1em;
				visibility: hidden;
			}
			.slot-container {
				background: var(--white);
				box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.06);
				padding: 1em 3em 3em 3em;
			}
			.tags {
				margin-top: 1em;
			}
			.empty-tags {
				height: 0.8em;
				visibility: hidden;
			}
			.tag {
				margin-right: 1em;
				font-size: 0.8em;
				background-color: var(--header-background);
				color: #3f3740;
				border-radius: 3px;
			}
			.tag a {
				text-decoration: none;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="prose">
					<div class="title">
						<p>{title}</p>
						<div class="subtitle">
							{
								subtitle && (
									<p>{subtitle}</p>
								)
							}
						</div>
						<div class="date">
							{
								pubDate && (
									<FormattedDate date={pubDate} />
								)
							}
							{
								updatedDate ? (
									<div class="last-updated-on">
										最終更新: <FormattedDate date={updatedDate} />
									</div>
								): (
									<div class="empty-updated-date"></div>
								)
							}
						</div>
						<div class="tags">
							{
							tags ? tags.map(tag => (
								<span class="tag"><a class="tag-link" href={`/tags/${tag}`}>#{tag}</a></span>
							)): (
									<div class="empty-tags"></div>
								)
							}
						</div>
					</div>
					<div class="slot-container">
						<slot />
					</div>
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
